{ Uses files:
                 'K-30.d'
                 'K+0.d'
                 'K+30.d'
                 'K+60.d'
}

procedure CommonParametersFromFile;
begin
with NP do begin
NSmpls:=5;
{ Ohm's law }
HH_type:='Calmar'{'Destexhe'};
HodgkinPhysParameters(NP);
t_end:=0.010 {s};
nt_end:=imin(trunc(t_end/dt), MaxNT);
{ Input }
Iind:=0 {pA};
{ Blockade }
IfBlockNaR:=1;
IfBlockNa:=1;   IfBlockPass:=1;
IfBlockK :=0;   IfBlockKM  :=1;   IfBlockKA:=1;
{ Clamping }
If_I_V_or_g:=1;
Vrest:=-0.060 {mV};
{ Samples - experimental curves }
scx_Smpl:=0.000465 {s};  scy_Smpl:=-1000 {form nA to pA};
  if KeepParams=0 then begin
     NP.Square:=1e-5;
{     gK:=6.9;
     a1K:= 0.0088; a2K:= 8.1; a3K:= 1.5;
     b1K:=0.125;   b2K:=0;    b3K:=80;
     VK := -0.077;}
     KeepParams:=1;
  end;
end;
end;

procedure ParametersFromFile;
begin
{nA, 0.465ms}  {Schmidt}
Vh:=NP.Vrest+0.030;
sc_Simplex:=4;
  SmplFile[Smpl]:='K-30.d';
end;

procedure ParametersFromFile2;
begin
{nA, 0.465ms}  {Schmidt}
Vh:=NP.Vrest+0.060;
sc_Simplex:=1;
  SmplFile[Smpl]:='K+0.d';
end;

procedure ParametersFromFile3;
begin
{nA, 0.465ms}  {Schmidt}
Vh:=NP.Vrest+0.090;
sc_Simplex:=1;
  SmplFile[Smpl]:='K+30.d';
end;

procedure ParametersFromFile4;
begin
{nA, 0.465ms}  {Schmidt}
Vh:=NP.Vrest+0.120;
sc_Simplex:=1;
  SmplFile[Smpl]:='K+60.d';
end;

procedure ParametersFromFile5;
begin
{nA, 0.465ms}  {Schmidt}
Vh:=NP.Vrest;
sc_Simplex:=1;
  SmplFile[Smpl]:='zero.d';
end;

procedure ParametersFromFile6;
begin end;

procedure ParametersFromFile7;
begin end;

procedure ParametersFromFile8;
begin end;

procedure ParametersFromFile9;
begin end;

procedure ParametersFromFile10;
begin end;

procedure ParametersFromFile11;
begin end;

procedure ParametersFromFile12;
begin end;

procedure ParametersFromFile13;
begin end;

procedure ParametersFromFile14;
begin end;

procedure ParametersFromFile15;
begin end;

procedure ParametersFromFile16;
begin end;

procedure ParametersFromFile17;
begin end;

procedure ParametersFromFile18;
begin end;

procedure ParametersFromFile19;
begin end;


